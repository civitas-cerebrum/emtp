name: EMTP Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Tesseract OCR
      run: |
        sudo apt-get install -y tesseract-ocr
        sudo apt-get install -y autoconf automake libtool
        sudo apt-get install -y pkg-config
        sudo apt-get install -y libpng-dev
        sudo apt-get install -y libjpeg8-dev
        sudo apt-get install -y libtiff5-dev
        sudo apt-get install -y zlib1g-dev
        sudo apt-get install -y libwebpdemux2 libwebp-dev
        sudo apt-get install -y libopenjp2-7-dev
        sudo apt-get install -y libgif-dev
        sudo apt-get install -y libarchive-dev libcurl4-openssl-dev
        sudo apt-get install -y g++ clang

    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL, HIGH'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Install Semgrep CLI
      run: python3 -m pip install semgrep

    - name: Run Semgrep SAST and Secrets Scanning
      run: semgrep scan --sarif --sarif-output=semgrep.sarif

    - name: Upload Semgrep scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'semgrep.sarif'


    - name: Configure config.ini
      run: |
        sed -i 's#^base_url = .*$#base_url = ${{ secrets.BASE_URL }}#' config.ini
        sed -i 's#^model_name = .*$#model_name = ${{ secrets.MODEL }}#' config.ini
        sed -i 's#^authorization_token = .*$#authorization_token = ${{ secrets.AUTH_TOKEN }}#' config.ini
        sed -i 's#^dataset_prompt = .*$#dataset_prompt = "${{ vars.DATASET_PROMPT }}"#' config.ini

    - name: Run EMTP Pipeline
      run: python main.py --stage full_pipeline --questions-file dataset/acquisition/retrieve_url/sample.json --text-data-output-dir dataset/acquisition/temp/text_data --accurate --verbose